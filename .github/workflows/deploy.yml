# This workflow will build and push a Docker image to your Droplet and restart the container
name: Deploy to DigitalOcean

on:
  # This triggers the workflow on every push to the main branch
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Replace with your Droplet's IP address
  SSH_HOST: ${{167.172.246.21}}
  # Replace with the name you want for your Docker image
  IMAGE_NAME: pps-project-user-app
  # Replace with the path to your SSH key on the runner.
  # This should be a base64 encoded private key string added as a GitHub secret
  SSH_PRIVATE_KEY: ${{dop_v1_ac5515852207ee492d3552640849181e8bc8609d7425fcddbe3a167c3b3e612c}}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{dop_v1_ac5515852207ee492d3552640849181e8bc8609d7425fcddbe3a167c3b3e612c }}

      - name: Deploy with Docker
        run: |
          # SSH into the Droplet and execute a script to pull, build, and run the container
          ssh -o StrictHostKeyChecking=no root@$SSH_HOST "
            # Navigate to the project directory
            cd /root/promasidor_pps_user_app
            # Stop and remove any old containers
            docker stop $IMAGE_NAME || true
            docker rm $IMAGE_NAME || true
            # Pull the latest changes from GitHub
            git pull
            # Rebuild the Docker image
            docker build -t $IMAGE_NAME .
            # Start a new container in detached mode
            docker run -d -p 80:8501 --name $IMAGE_NAME $IMAGE_NAME
          "
